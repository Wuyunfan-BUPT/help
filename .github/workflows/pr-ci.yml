name: PR-CI

on:
  pull_request:
    branches: [ main ]
env:
  REPO_NAME: Wuyunfan-BUPT/help
  HEADER: "-H \"Accept: application/vnd.github+json\" -H \"Authorization: Bearer ${{ secrets.ACTION_TOKEN }}\" -H \"X-GitHub-Api-Version: 2022-11-28\""
  BASE_URL: https://api.github.com/repos/${REPO_NAME}/actions/variables
  DOCKER_REPO: wuyfee/nacos-ci   # wuyfeedocker/nacos-ci
  DOCKER_REPO_B: wuyfeehub/nacos-ci
jobs:
  printTest:
    name: print test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ["cluster","standalone"]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: Wuyunfan-BUPT/nacos-e2e.git
          ref: fix-centos-repo-error
          path: nacos-e2e
      - name: Generate image tag
        id: build-images
        run: |
          cd nacos-e2e/cicd/build
          docker build --no-cache -f Dockerfile -t ww:1 .
      - name: allocate docker repo
        run: |
          if [[ $(expr $(expr ${{ github.run_id }} + ${{ strategy.job-index }} ) % 2 ) -eq 1 ]]; then
            echo "DOCKER_REPO_ACTUAL=${{ env.DOCKER_REPO }}" >> $GITHUB_ENV
          else
            echo "DOCKER_REPO_ACTUAL=${{ env.DOCKER_REPO_B }}" >> $GITHUB_ENV
          fi
          echo ${{ env.DOCKER_REPO_ACTUAL }}
      - name: Get allocate result
        run: echo "${{ env.DOCKER_REPO_ACTUAL }}    ${{ env.DOCKER_REPO_ACTUAL2 }}"
      - uses: actions/github-script@v6
        id: set-result
        with:
          script: return "Hello!"
          result-encoding: string
      - name: Get result
        run: echo "${{steps.set-result.outputs.result}}"
      - name: set output
        run: |
          echo "REPLICA_COUNT=3" >> $GITHUB_ENV
          echo "DATABASE=mysql" >> $GITHUB_ENV
          echo "NODE_PORT=$(expr $(expr $(expr $(expr 1 * $(expr ${{ github.run_number }} - 1)) + ${{ strategy.job-index }}) % 30000) + 30000)" >> $GITHUB_ENV
      - name: print output
        run: |
          echo ${{ env.REPLICA_COUNT }}
          echo ${{ env.DATABASE }}
          echo ${{ env.NODE_PORT }}
      - name: print issue number
        run: |
          echo $GITHUB_REPOSITORY
          echo ${{ github.event.pull_request.number }}
          echo ${{ github.event.issue.number }}
          echo ${NUMBER}
          curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.ACTION_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/Wuyunfan-BUPT/help/issues/${{ github.event.pull_request.number }}/comments -d "{\"body\":\"https://github.com/Wuyunfan-BUPT/help/actions/runs/${{ github.run_id }}\"}"
        env:
          NUMBER: ${{ github.event.issue.number }}
#       - name: print github.job
#         run: |
#           sleep 10
#           echo ${{ github.job }}
      - name: generate TEMP_VARI
        run: |
          curl -L -X POST ${{ env.HEADER }} ${{ env.BASE_URL }} -d "{\"name\":\"VARI_${{ github.run_id }}\",\"value\":\"${{ github.event.pull_request.number }}\"}"
#      - name: set IS_END values
#        run: |
#          curl -L -X PATCH -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.ACTION_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/Wuyunfan-BUPT/help/actions/variables/ABC -d '{"name":"ABC","value":"waiting"}'
#   showResult:
#     name: show result
#     needs: [printTest]
#     runs-on: ubuntu-latest
#     steps:
#       - name: print GITHUB_RUN_ID
#         run: |
#           echo ${{ github.run_id }}
#       - name: print github.job
#         run: |
#           echo ${{ github.job }}
#           echo ${{ env.BASE_URL }}
#       - name: waitting result
#         run: |
#           values=`curl -L ${{ env.HEADER }} ${{ env.BASE_URL }} | jq -r '.variables[] | select(.name == "VARI_${{ github.run_id }}") | .value'`
#           while [ ${values} == "waiting" ]
#           do
#             echo "${values}..."
#             sleep 2
#             values=`curl -L ${{ env.HEADER }} ${{ env.BASE_URL }} | jq -r '.variables[] | select(.name == "VARI_${{ github.run_id }}") | .value'`
#           done
#           echo ${values}
#           echo  "https://github.com/${{ env.REPO_NAME }}/actions/runs/${values}" >> $GITHUB_STEP_SUMMARY
#       - name: delete variables
#         run: |
#           curl -L -X DELETE ${{ env.HEADER }} ${{ env.BASE_URL }}/VARI_${{ github.run_id }}
          
